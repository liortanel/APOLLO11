@{
    ViewData["Title"] = "Bienvenido";
}

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>@ViewData["Title"]</title>
  <style>

  .contenedor-final {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 2s ease forwards;
  z-index: 1000;
}

  .titulo-apollo {
  font-size: 48px;
  font-weight: bold;
  color: #00ffff;
  text-align: center;
  text-shadow: 0 0 10px #00ffff, 0 0 20px #00cccc;
  animation: fadeIn 2s ease-out forwards;
  margin-top: 40px;
}

.boton-jugar {
  font-size: 24px;
  color: #ffffff;
  background-color: #222;
  border: 2px solid #00ffff;
  padding: 12px 24px;
  margin: 30px auto 0;
  width: fit-content;
  cursor: pointer;
  text-align: center;
  text-shadow: 0 0 5px #00ffff;
  border-radius: 8px;
  transition: background 0.3s, transform 0.2s;
  animation: fadeIn 3s ease-out forwards;
}

.boton-jugar:hover {
  background-color: #00ffff;
  color: #000;
  transform: scale(1.05);
}
    html, body {
      margin: 0; padding: 0; height: 100%;
      background-color: black;
      color: white;
      font-family: 'Courier New', monospace;
      font-size: 18px;
      overflow-x: hidden;
    }

#console {
  max-width: 800px;
  padding: 20px;
  white-space: pre-wrap;
  text-align: left;
}

    input {
      background: black;
      border: none;
      border-bottom: 1px solid white;
      color: white;
      font-family: 'Courier New', monospace;
      font-size: 18px;
      outline: none;
      width: 250px;
    }

    #myVideo {
      display: none;
      width: 100%;
      height: auto;
      margin-top: 20px;
    }

    .error {
      color: red;
      font-size: 36px;
      font-weight: bold;
      animation: shake 0.08s infinite, glitch 1s infinite;
      position: relative;
      user-select: none;
      margin-bottom: 20px;
      white-space: nowrap;
    }

    .error::before,
    .error::after {
      content: attr(data-text);
      position: absolute;
      left: 0;
      right: 0;
      opacity: 0.8;
      clip: rect(0, 900px, 0, 0);
    }
    .error::before {
      animation: glitch-anim1 1s infinite;
      color: #ff3c3c;
      z-index: -1;
    }
    .error::after {
      animation: glitch-anim2 1s infinite;
      color: #ffb3b3;
      z-index: -2;
    }

   @@keyframes shake {
      0% { transform: translate(0, 0) rotate(0deg); }
      20% { transform: translate(-5px, 5px) rotate(-1deg); }
      40% { transform: translate(5px, -5px) rotate(1deg); }
      60% { transform: translate(-5px, -5px) rotate(-1deg); }
      80% { transform: translate(5px, 5px) rotate(1deg); }
      100% { transform: translate(0, 0) rotate(0deg); }
    }

   @@keyframes glitch {
      0%, 100% {
        clip: rect(0, 9999px, 0, 0);
      }
      10% {
        clip: rect(5px, 9999px, 30px, 0);
        transform: translate(-2px, -2px);
      }
      20% {
        clip: rect(10px, 9999px, 25px, 0);
        transform: translate(2px, 2px);
      }
      30% {
        clip: rect(15px, 9999px, 20px, 0);
        transform: translate(-2px, 2px);
      }
      40% {
        clip: rect(10px, 9999px, 30px, 0);
        transform: translate(2px, -2px);
      }
      50% {
        clip: rect(0, 9999px, 0, 0);
        transform: none;
      }
    }

   @@keyframes glitch-anim1 {
      0% { clip: rect(0, 9999px, 0, 0); transform: translate(0); }
      20% { clip: rect(2px, 9999px, 24px, 0); transform: translate(-3px, 0); }
      40% { clip: rect(15px, 9999px, 20px, 0); transform: translate(3px, 0); }
      60% { clip: rect(8px, 9999px, 18px, 0); transform: translate(-3px, 0); }
      80% { clip: rect(3px, 9999px, 22px, 0); transform: translate(3px, 0); }
      100% { clip: rect(0, 9999px, 0, 0); transform: translate(0); }
    }

   @@keyframes glitch-anim2 {
      0% { clip: rect(0, 9999px, 0, 0); transform: translate(0); }
      20% { clip: rect(10px, 9999px, 20px, 0); transform: translate(3px, 0); }
      40% { clip: rect(5px, 9999px, 25px, 0); transform: translate(-3px, 0); }
      60% { clip: rect(12px, 9999px, 18px, 0); transform: translate(3px, 0); }
      80% { clip: rect(7px, 9999px, 23px, 0); transform: translate(-3px, 0); }
      100% { clip: rect(0, 9999px, 0, 0); transform: translate(0); }
    }

   @@keyframes alertBackground {
      0%, 100% { background-color: black; }
      50% { background-color: #660000; }
    }

    .alert-bg {
      animation: alertBackground 0.5s infinite;
    }

   @@keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    .fade-in {
      animation: fadeIn 3s ease forwards;
      opacity: 0;
      margin-top: 20px;
      font-weight: bold;
      font-size: 20px;
      color: #ff8c00;
      text-shadow: 0 0 10px #ff8c00;
      animation-delay: 1s;
      animation-fill-mode: forwards;
    }

   @@keyframes finalShake {
      0%, 100% { transform: translate(0, 0); }
      20%, 60% { transform: translate(-3px, 3px); }
      40%, 80% { transform: translate(3px, -3px); }
    }

    .final-shake {
      animation: finalShake 0.2s infinite;
    }
        #f11-warning {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 48px;
      font-weight: bold;
      color: #00ffff;
      text-align: center;
      text-shadow: 0 0 15px #00ffff, 0 0 30px #00cccc;
      background-color: rgba(0,0,0,0.85);
      padding: 30px 50px;
      border-radius: 12px;
      opacity: 1;
      animation: fadeOut 3s ease forwards;
      /* Empieza visible y luego se desvanece */
      z-index: 2000;
    }
    @@keyframes fadeOut {
      0% { opacity: 1; }
      70% { opacity: 1; }
      100% { opacity: 0; visibility: hidden; }
    }
  </style>
</head>
<body>
<div id="f11-warning" class="warning-box">
  SUBIR EL VOLÚMEN<br><br>PRESIONAR F11 PARA UNA MEJOR EXPERIENCIA
</div>
  <div id="console"></div>

  <video id="myVideo">
    <source src="/img/1seg.mp4" type="video/mp4" />
    Your browser no soporta video HTML5.
  </video>

  <!-- SONIDO DE CHOQUE -->
  <audio id="errorSound">
    <source src="/sounds/cohete.mp3" type="audio/mp3" />
  </audio>

  <!-- SONIDO DE TECLAS -->
  <audio id="typeSound">
    <source src="/sounds/tecla_.mp3" type="audio/mp3"/>
  </audio>
  <!-- SONIDO DE COHETE -->
  <audio id="coheteSound">
  <source src="/sounds/cohete.mp3" type="audio/mp3" />
</audio>

  <script>
    const warning = document.getElementById("f11-warning");
    const video = document.getElementById("myVideo");
    
    // Esperamos a que la animación fadeOut termine (3s)
    warning.addEventListener("animationend", () => {
      warning.style.display = "none";
      // Ahora sí arrancamos el programa:
      typeIntro();
    });

    // El resto de tu código JS aquí (tipo typeIntro, etc) pero OJO:
    // NO llamar typeIntro() hasta que desaparezca el warning.

    // Ejemplo función typeIntro para que quede completo:
    const consoleDiv = document.getElementById("console");
    const typeSound = new Audio('/sounds/tecla_.mp3'); // o como lo tengas

    const introText = "Bienvenido a la misión Apollo11 astronauta ";
    let index = 0;

    function typeIntro() {
      if (index < introText.length) {
        consoleDiv.innerHTML += introText.charAt(index);
        typeSound.currentTime = 0;
        typeSound.play();
        index++;
        setTimeout(typeIntro, 50);
      } else {
        pedirNombre();
      }
    }

function pedirNombre() {
  const inputNombre = document.createElement("input");
  inputNombre.type = "text";
  inputNombre.placeholder = "Ingresa tu nombre";
  consoleDiv.appendChild(inputNombre);
  inputNombre.focus();

  inputNombre.addEventListener("keydown", function (e) {
    if (e.key === "Enter" && inputNombre.value.trim() !== "") {
      const name = inputNombre.value.trim();
      const span = document.createElement("span");
      span.textContent = name;
      consoleDiv.removeChild(inputNombre);
      consoleDiv.appendChild(span);

      fetch("/Home/GuardarNombre", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ nombre: name })
      });
      pedirEmail(name);
    }
  });
}

function pedirEmail(name) {
  const br = document.createElement("br");
  consoleDiv.appendChild(br);

  const inputEmail = document.createElement("input");
  inputEmail.type = "email";
  inputEmail.placeholder = "Ingresa tu email";
  consoleDiv.appendChild(inputEmail);
  inputEmail.focus();

  inputEmail.addEventListener("keydown", function (e) {
    if (e.key === "Enter" && inputEmail.value.trim() !== "") {
      const email = inputEmail.value.trim();
      const span = document.createElement("span");
      span.textContent = ` (${email})`;
      consoleDiv.removeChild(inputEmail);
      consoleDiv.appendChild(span);

      fetch("/Home/GuardarEmail", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email: email })

        });

      setTimeout(() => {
        const story = `
Iniciando protocolo de misión...

Astronauta ${name}, ha sido seleccionado para formar parte de la histórica misión Apollo 11.

Objetivo principal: Aterrizar en la superficie de la Luna, recolectar muestras geológicas y regresar a la Tierra con información valiosa para el futuro de la exploración espacial.

Tripulación asignada:
- Comandante Neil Armstrong
- Piloto del módulo de comando: Michael Collins
- Piloto del módulo lunar: Edwin "Buzz" Aldrin

Especialista de misión: ${name} (usted)

Fecha de lanzamiento: 16 de julio de 1969
Lugar: Centro Espacial Kennedy, Plataforma LC-39A

Preparándose para iniciar la cuenta regresiva...
`;
        typeText(story, 0, () => {
          iniciarCuentaRegresiva(5);
        });
      }, 1);//500
    }
  });
}

    function typeText(text, i = 0, callback) {
      if (i < text.length) {
        consoleDiv.innerHTML += text.charAt(i);
        typeSound.currentTime = 0;
        typeSound.play();
        setTimeout(() => typeText(text, i + 1, callback), 1);//1000
      } else if (callback) {
        callback();
      }
    }

function iniciarCuentaRegresiva(numero) {
  if (numero > 0) {
    consoleDiv.innerHTML += `\n${numero}...`;
    setTimeout(() => iniciarCuentaRegresiva(numero - 1), 1000);
  } else {
    consoleDiv.innerHTML += "\n¡Despegue!";
    setTimeout(() => {
      video.style.display = "block";
      video.play();
      video.onended = mostrarTextoPostVideo;
    }, 1000);
  }
}

function mostrarTextoPostVideo() {
  video.pause();
  video.currentTime = 0;
  video.style.display = "none";

  consoleDiv.innerHTML = ""; // limpiamos todo antes

  const textoMisionPostVideo = `
MÓDULO DE COMANDO

La misión ha comenzado exitosamente. A medida que el módulo de comando alcanza la órbita terrestre, los sistemas de navegación se ajustan automáticamente. Los astronautas se preparan para la transferencia hacia la órbita lunar, ajustando sus trajes, comprobando niveles de oxígeno y presión. Todo parece ir según lo planeado...
`;
  const coheteSound = document.getElementById("coheteSound");
  coheteSound.volume = 0.5;
  coheteSound.currentTime = 0;
  coheteSound.play();

  typeText(textoMisionPostVideo, 0, () => {
    coheteSound.pause();
    iniciarError();
  });

  setTimeout(() => {
    errorSound.loop = false;
    errorSound.pause();
    errorSound.currentTime = 0;
    consoleDiv.innerHTML = "";

    const titulo = document.createElement("div");
    titulo.className = "titulo-apollo";
    titulo.textContent = "MISIÓN APOLLO 11";

    const boton = document.createElement("div");
    boton.className = "boton-jugar";
    boton.textContent = "EMPEZAR JUEGO";
    boton.onclick = () => window.location.href = "/Home/Mapa";

    const contenedorFinal = document.createElement("div");
    contenedorFinal.className = "contenedor-final";
    contenedorFinal.appendChild(titulo);
    contenedorFinal.appendChild(boton);

    consoleDiv.appendChild(contenedorFinal);

  }, 10000);
}

function iniciarError() {
  document.body.classList.add("alert-bg");

  const errorText = document.createElement("div");
  errorText.className = "error";
  errorText.setAttribute("data-text", "¡ERROR DE SISTEMA CRÍTICO!");
  errorText.textContent = "¡ERROR DE SISTEMA CRÍTICO!";
  consoleDiv.appendChild(errorText);

  errorSound.loop = true;
  errorSound.playbackRate = 3.0;
  errorSound.play();

  document.body.style.animation = "shake 0.08s infinite";

  setTimeout(() => {
    document.body.style.animation = "";
    document.body.classList.remove("alert-bg");

    const antesFinalText = `De repente, se detecta una pérdida de presión crítica en la cabina. Los sistemas de soporte vital alertan de inmediato y se activan los protocolos de emergencia.
El cohete alcanza velocidades ultra sónicas, la situación se torna inestable..., pierdes el conocimiento.

Las leyes de la física comienzan a doblarse mientras la nave atraviesa el sistema solar a velocidad inimaginable...
`;

    typeText(antesFinalText, 0, () => {
      const finalText = document.createElement("div");
      finalText.className = "fade-in final-shake";
      finalText.textContent = capitalizarPrimeraLetra(`te despiertas con el cohete en perfectas condiciones en la superficie de Neptuno. Misión: Regresar a la Tierra.`);
      consoleDiv.appendChild(finalText);

      setTimeout(() => {
        finalText.classList.remove("final-shake");
      }, 500);
    });
  }, 2000);
}

function capitalizarPrimeraLetra(texto) {
  return texto.charAt(0).toUpperCase() + texto.slice(1);
}

  </script> </body> </html>
