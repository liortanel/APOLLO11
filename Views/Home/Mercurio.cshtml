@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var tokens = Antiforgery.GetAndStoreTokens(Context);
}
@{
    ViewData["Title"] = "Mercurio";
}
<input type="hidden" name="__RequestVerificationToken" value="@tokens.RequestToken" />

<style>
  html, body {
    margin: 0; padding: 0; height: 100%; width: 100%;
    overflow: hidden;
    font-family: monospace;
    background: radial-gradient(ellipse at center, #220000 0%, #110000 90%);
    color: white;
    display: flex; 
    flex-direction: column; 
    align-items: center;
    justify-content: center;
  }

  #introScreen {
    position: fixed;
    top: 0; left: 0; width: 100vw; height: 100vh;
    background: rgba(0,0,0,1);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    z-index: 200;
  }

  #introScreen h1 {
    font-size: 3rem;
    margin-bottom: 20px;
  }

  #introScreen p {
    font-size: 1.5rem;
    margin-bottom: 40px;
  }

  .boton-jugar {
    font-size: 24px;
    color: #ffffff;
    background-color: #222;
    border: 2px solid #00ffff;
    padding: 12px 24px;
    cursor: pointer;
    text-align: center;
    text-shadow: 0 0 5px #00ffff;
    border-radius: 8px;
    transition: background 0.3s, transform 0.2s;
    animation: fadeIn 3s ease-out forwards;
    text-decoration: none;
    margin-top: 20px;
  }

  .boton-jugar:hover {
    background-color: #00ffff;
    color: #000;
    transform: scale(1.05);
  }

  #gameContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    padding: 20px;
  }

  .pyramid-row {
    display: flex;
    justify-content: center;
    gap: 20px;
  }

  .cell {
    width: 80px;
    height: 80px;
    border: 3px solid #ff6600;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    cursor: pointer;
    background: rgba(255, 51, 0, 0.2);
    transition: all 0.3s ease;
    position: relative;
  }

  .cell:hover {
    transform: scale(1.1);
    box-shadow: 0 0 15px #ff6600;
  }

  .cell.selected {
    background: rgba(0, 255, 0, 0.3);
    border-color: #00ff00;
    box-shadow: 0 0 20px #00ff00;
  }

  .cell .letter {
    position: absolute;
    top: -25px;
    left: -25px;
    font-size: 20px;
    color: #00ffff;
    text-shadow: 0 0 5px #00ffff;
  }

  #objective {
    font-size: 32px;
    color: #00ff00;
    text-shadow: 0 0 10px #00ff00;
    margin-bottom: 20px;
  }

  #message {
    font-size: 24px;
    color: #00ffff;
    text-shadow: 0 0 8px #00ffff;
    height: 40px;
    text-align: center;
    margin-top: 20px;
  }

  #combinations {
    font-size: 18px;
    color: #ff6600;
    text-shadow: 0 0 5px #ff6600;
    margin-top: 20px;
    text-align: center;
  }
</style>

<div id="introScreen">
  <h1>Mercurio</h1>
  <p>Encuentra las combinaciones de tres números que den como resultado el objetivo.</p>
  <button id="btnStart" class="boton-jugar">Comenzar</button>
</div>

<div id="gameContainer" style="display: none;">
  <div id="objective">Objetivo: 9</div>
  <div class="pyramid-row">
    <div class="cell" data-value="1" data-operator="+"><span class="letter">A</span>+1</div>
  </div>
  <div class="pyramid-row">
    <div class="cell" data-value="4" data-operator="/"><span class="letter">B</span>/4</div>
    <div class="cell" data-value="3" data-operator="*"><span class="letter">C</span>*3</div>
  </div>
  <div class="pyramid-row">
    <div class="cell" data-value="10" data-operator="-"><span class="letter">D</span>-10</div>
    <div class="cell" data-value="5" data-operator="/"><span class="letter">E</span>/5</div>
    <div class="cell" data-value="6" data-operator="*"><span class="letter">F</span>*6</div>
  </div>
  <div class="pyramid-row">
    <div class="cell" data-value="11" data-operator="-"><span class="letter">G</span>-11</div>
    <div class="cell" data-value="7" data-operator="+"><span class="letter">H</span>+7</div>
    <div class="cell" data-value="9" data-operator="/"><span class="letter">I</span>/9</div>
    <div class="cell" data-value="9" data-operator="+"><span class="letter">J</span>+9</div>
  </div>
  <div id="message"></div>
  <div id="combinations">Combinaciones válidas: CAF, DEH, FAC, GDE</div>
</div>

<script>
  const introScreen = document.getElementById('introScreen');
  const btnStart = document.getElementById('btnStart');
  const gameContainer = document.getElementById('gameContainer');
  const cells = document.querySelectorAll('.cell');
  const messageEl = document.getElementById('message');
  const objective = 9;

  let selectedCells = [];

  btnStart.addEventListener('click', () => {
    introScreen.style.display = 'none';
    gameContainer.style.display = 'flex';
  });

  cells.forEach(cell => {
    cell.addEventListener('click', () => {
      if (cell.classList.contains('selected')) {
        cell.classList.remove('selected');
        selectedCells = selectedCells.filter(c => c !== cell);
      } else {
        if (selectedCells.length < 3) {
          cell.classList.add('selected');
          selectedCells.push(cell);
          
          if (selectedCells.length === 3) {
            checkCombination();
          }
        }
      }
    });
  });

  function checkCombination() {
    const letters = selectedCells.map(cell => 
      cell.querySelector('.letter').textContent
    ).join('');

    const validCombinations = ['CAF', 'DEH', 'FAC', 'GDE'];
    
    if (validCombinations.includes(letters)) {
      messageEl.textContent = '¡Combinación correcta!';
      messageEl.style.color = '#00ff00';
    } else {
      messageEl.textContent = 'Combinación incorrecta';
      messageEl.style.color = '#ff0000';
    }

    setTimeout(() => {
      selectedCells.forEach(cell => cell.classList.remove('selected'));
      selectedCells = [];
      messageEl.textContent = '';
    }, 2000);
  }
</script>
